#include <string>
#include <unordered_map>
#include <algorithm>
using namespace std;

class LongestUniqueSubstring {
public:
    int lengthOfLongestSubstring(const string &s) {
        unordered_map<char, int> lastSeen;
        int maxLength = 0;
        int start = 0;

        for (int end = 0; end < s.length(); ++end) {
            char ch = s[end];
            if (lastSeen.find(ch) != lastSeen.end() && lastSeen[ch] >= start) {
                start = lastSeen[ch] + 1;
            }
            lastSeen[ch] = end;
            maxLength = max(maxLength, end - start + 1);
        }

        return maxLength;
    }
};
